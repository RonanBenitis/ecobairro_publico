// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ecobairroServer.Data;

#nullable disable

namespace ecobairroServer.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Bairro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Bairros");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Marcacao.ChamadasPin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MunicipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PinId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MunicipeId");

                    b.HasIndex("PinId");

                    b.ToTable("ChamadasPin");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Marcacao.Pin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BairroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FiscalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("MunicipeCriadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Pontuacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BairroId");

                    b.HasIndex("FiscalId");

                    b.HasIndex("MunicipeCriadorId");

                    b.ToTable("Pins");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Fiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rgf")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Rgf")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Fiscais");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Municipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Municipes");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Marcacao.ChamadasPin", b =>
                {
                    b.HasOne("ecobairroServer.Source.Core.Models.Pessoa.Municipe", "Municipe")
                        .WithMany("PinsChamados")
                        .HasForeignKey("MunicipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecobairroServer.Source.Core.Models.Marcacao.Pin", "Pin")
                        .WithMany("ChamadasPins")
                        .HasForeignKey("PinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipe");

                    b.Navigation("Pin");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Marcacao.Pin", b =>
                {
                    b.HasOne("ecobairroServer.Source.Core.Models.Bairro", "Bairro")
                        .WithMany()
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecobairroServer.Source.Core.Models.Pessoa.Fiscal", "Fiscal")
                        .WithMany("PinsAdministrados")
                        .HasForeignKey("FiscalId");

                    b.HasOne("ecobairroServer.Source.Core.Models.Pessoa.Municipe", "MunicipeCriador")
                        .WithMany("PinsCriados")
                        .HasForeignKey("MunicipeCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bairro");

                    b.Navigation("Fiscal");

                    b.Navigation("MunicipeCriador");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Fiscal", b =>
                {
                    b.HasOne("ecobairroServer.Source.Core.Models.Pessoa.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Municipe", b =>
                {
                    b.HasOne("ecobairroServer.Source.Core.Models.Pessoa.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Marcacao.Pin", b =>
                {
                    b.Navigation("ChamadasPins");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Fiscal", b =>
                {
                    b.Navigation("PinsAdministrados");
                });

            modelBuilder.Entity("ecobairroServer.Source.Core.Models.Pessoa.Municipe", b =>
                {
                    b.Navigation("PinsChamados");

                    b.Navigation("PinsCriados");
                });
#pragma warning restore 612, 618
        }
    }
}
